version: "3.5"

services:
    app:
        image: sample-node
        build:
            context: .
            dockerfile: Dockerfile
        command: ["yarn", "start"]
        ports:
            - "3000:3000"
        volumes:
            - ./src:/app/src
        environment:
            APP_PORT: 3000
            JWT_SECRET: abcdef123456
            DB_HOST: mysql
            DB_PORT: 3306
            DB_NAME: TMS
            DB_USER: admin
            DB_PASSWORD: etc12345
        networks:
            samplenode:
        depends_on:
            - mongo
            - mysql
    mongo:
        image: mongo
        command: --serviceExecutor adaptive
        container_name: "mongo-tms"
        restart: always
        ports:
            - 27017:27017
        environment:
            - MONGO_INITDB_DATABASE=TMS
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=etc12345
        volumes:
            - ./dbseeder/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        networks:
            samplenode:
                aliases:
                    - mongo
    mongo-express:
        image: mongo-express
        container_name: "mongo-express"
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: etc12345
        networks:
            samplenode:
        depends_on:
            - mongo
    mysql:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: etc12345
            MYSQL_DATABASE: TMS
            MYSQL_USER: admin
            MYSQL_PASSWORD: etc12345
        volumes:
            - dbdata:/var/lib/mysql
            - ./dbseeder:/docker-entrypoint-initdb.d
        networks:
            samplenode:
                aliases:
                    - mysql
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            samplenode:
        depends_on:
            - mysql
networks:
    samplenode:
volumes:
    dbdata:
